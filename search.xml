<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NOSQL非关系数据库2020-2021题目</title>
      <link href="/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6NOSQL%E9%9D%9E%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%932020-2021%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95%E9%A2%98%E7%9B%AE%EF%BC%88%E5%9B%9E%E5%BF%86%EF%BC%89/"/>
      <url>/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6NOSQL%E9%9D%9E%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%932020-2021%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95%E9%A2%98%E7%9B%AE%EF%BC%88%E5%9B%9E%E5%BF%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >简单回忆记录2020学年秋季学期的限选课NoSQL非关系数据库的期末考试题目，单人记忆可能有偏差，请谅解。相关内容为个人观点，不是正确答案…</font><br><a href="https://blog.csdn.net/lwt1597532486/article/details/112004608">NoSQL期末复习相关资料</a></p><p><font color=#999AAA ><a href="https://blog.csdn.net/lwt1597532486/article/details/112004608">https://blog.csdn.net/lwt1597532486/article/details/112004608</a></p><p><font color=#999AAA >from 韬</p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="一、简答题"><a href="#一、简答题" class="headerlink" title="一、简答题"></a>一、简答题</h1><h2 id="1-BASE和ACID的区别"><a href="#1-BASE和ACID的区别" class="headerlink" title="1.BASE和ACID的区别"></a>1.BASE和ACID的区别</h2><p><img src="https://img-blog.csdnimg.cn/20201231104705979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="来自老师PPT，侵删"></p><p><font color=#999AAA >来自老师PPT，侵删</p><h2 id="2-举例说明两阶段提交协议"><a href="#2-举例说明两阶段提交协议" class="headerlink" title="2.举例说明两阶段提交协议"></a>2.举例说明两阶段提交协议</h2><p><img src="https://img-blog.csdnimg.cn/20201230223414220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="来自老师PPT，侵删"></p><p><font color=#999AAA >来自老师PPT，侵删</p><h2 id="3-描述RDB数据库、NoSQL数据库和NewSQL数据库的区别和特点"><a href="#3-描述RDB数据库、NoSQL数据库和NewSQL数据库的区别和特点" class="headerlink" title="3.描述RDB数据库、NoSQL数据库和NewSQL数据库的区别和特点"></a>3.描述RDB数据库、NoSQL数据库和NewSQL数据库的区别和特点</h2><p><font color=#999AAA >相关示例<br>关系数据库的不足：大量数据的写入处理；表结构变更及建立索引；字段不固定的应用；对简单查询需要快速返回结果的处理<br>NoSQL数据库的优势：易于数据的分散；提升性能和增大规模；模式自由；扩展性好<br>NewSQL 是对各种新的可扩展/高性能数据库的简称 ，具有 NoSQL 对海量数据的存储管理能力 ，保持了传统数据库支持 ACID 和 SQL 等特性<br>特点 ：支持关系数据模型 ； 使用 SQL 作为其主要接口</p><h1 id="二、ER图转Redis"><a href="#二、ER图转Redis" class="headerlink" title="二、ER图转Redis"></a>二、ER图转Redis</h1><h2 id="将下面的ER图转换成Redis存储，写出数据库结构和示例数据（每个实体集、联系集至少5条）"><a href="#将下面的ER图转换成Redis存储，写出数据库结构和示例数据（每个实体集、联系集至少5条）" class="headerlink" title="将下面的ER图转换成Redis存储，写出数据库结构和示例数据（每个实体集、联系集至少5条）"></a>将下面的ER图转换成Redis存储，写出数据库结构和示例数据（每个实体集、联系集至少5条）</h2><p><img src="https://img-blog.csdnimg.cn/20201231101228221.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="凭记忆手绘图"></p><h1 id="三、NoSQL实现二度好友、三度好友"><a href="#三、NoSQL实现二度好友、三度好友" class="headerlink" title="三、NoSQL实现二度好友、三度好友"></a>三、NoSQL实现二度好友、三度好友</h1><h2 id="选择一种NoSQL数据库较好实现QQ的二度好友、三度好友的检索，写出数据库结构并描述检索二度好友、三度好友的算法思想"><a href="#选择一种NoSQL数据库较好实现QQ的二度好友、三度好友的检索，写出数据库结构并描述检索二度好友、三度好友的算法思想" class="headerlink" title="选择一种NoSQL数据库较好实现QQ的二度好友、三度好友的检索，写出数据库结构并描述检索二度好友、三度好友的算法思想"></a>选择一种NoSQL数据库较好实现QQ的二度好友、三度好友的检索，写出数据库结构并描述检索二度好友、三度好友的算法思想</h2><p><font color=#999AAA >备注：二度好友指朋友的朋友，三度好友指朋友的朋友的朋友<br>个人认为Neo4j可以，并且去除了重复情况（既是朋友又是朋友的朋友）</p><h1 id="四、Neo4j转成Hbase和Mongo"><a href="#四、Neo4j转成Hbase和Mongo" class="headerlink" title="四、Neo4j转成Hbase和Mongo"></a>四、Neo4j转成Hbase和Mongo</h1><h2 id="将下图Neo4j的数据库转换成Hbase和Mongo，写出数据库结构并列出所有图示的示例数据"><a href="#将下图Neo4j的数据库转换成Hbase和Mongo，写出数据库结构并列出所有图示的示例数据" class="headerlink" title="将下图Neo4j的数据库转换成Hbase和Mongo，写出数据库结构并列出所有图示的示例数据"></a>将下图Neo4j的数据库转换成Hbase和Mongo，写出数据库结构并列出所有图示的示例数据</h2><p><font color=#999AAA >备注：<br>1.国家与米国只有连线（国家到米国?）没有文字，不知是反了还是包含的意思<br>2.人口、面积、纬度、经度都有数值但记不清了，可参考百度，示例：14.53亿，1000000000km2,100o50’E<br>3.有的国家、城市就是没有信息，注意“城市”<br><img src="https://img-blog.csdnimg.cn/20201231102937405.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="记忆手绘图"></p><h1 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h1><h3 id="NoSQL非关系数据库这门课是大数据方向的限选课但是其他方向感兴趣也可以选。-注意课程有实验有考试-，但实验不难，根据老师PPT可以搞定。考试也不是很难，认真看看老师PPT就行。"><a href="#NoSQL非关系数据库这门课是大数据方向的限选课但是其他方向感兴趣也可以选。-注意课程有实验有考试-，但实验不难，根据老师PPT可以搞定。考试也不是很难，认真看看老师PPT就行。" class="headerlink" title="NoSQL非关系数据库这门课是大数据方向的限选课但是其他方向感兴趣也可以选。==注意课程有实验有考试==，但实验不难，根据老师PPT可以搞定。考试也不是很难，认真看看老师PPT就行。"></a>NoSQL非关系数据库这门课是大数据方向的限选课但是其他方向感兴趣也可以选。==注意课程有实验有考试==，但实验不难，根据老师PPT可以搞定。考试也不是很难，认真看看老师PPT就行。</h3><p><font color=#999AAA >选课推荐选闫老师，讲的仔细（<del>虽然没听</del>），并且ppt全面。听说我们实验太多了，就把NoSQL实验推到考完试（<del>都放假一周了</del>）后交，感激…</p><p><a href="https://blog.csdn.net/lwt1597532486/article/details/112004608">NoSQL期末复习相关资料</a></p><p><font color=#999AAA ><a href="https://blog.csdn.net/lwt1597532486/article/details/112004608">https://blog.csdn.net/lwt1597532486/article/details/112004608</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL非关系数据库复习</title>
      <link href="/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%AD%A6%E9%99%A22020-2021NoSQL%E9%9D%9E%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/"/>
      <url>/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%AD%A6%E9%99%A22020-2021NoSQL%E9%9D%9E%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA > 自己整理的NoSQL非关系数据库的复习资料<br>主要来自智库和老师ppt，图片为PPT截图，侵删</font><br><a href="https://blog.csdn.net/lwt1597532486/article/details/111999489">NoSQL2020-2021期末考试题回忆</a></p><p><font color=#999AAA ><a href="https://blog.csdn.net/lwt1597532486/article/details/111999489">https://blog.csdn.net/lwt1597532486/article/details/111999489</a></p><p><font color=#999AAA >from 韬</p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><h2 id="NOSQL与关系型"><a href="#NOSQL与关系型" class="headerlink" title="NOSQL与关系型"></a>NOSQL与关系型</h2><p>关系数据库的不足：大量数据的写入处理；表结构变更及建立索引；字段不固定的应用；对简单查询需要快速返回结果的处理<br>NoSQL数据库的优势：易于数据的分散；提升性能和增大规模；模式自由；扩展性好</p><p><img src="https://img-blog.csdnimg.cn/20201231105913648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="来自老师PPT，侵删"></p><h2 id="CAP"><a href="#CAP" class="headerlink" title="CAP"></a>CAP</h2><p><img src="https://img-blog.csdnimg.cn/2020123112123293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>可用性： 一直可以正常的做读写操作。简单而言就是客户端一直可以正常访问并得到系统的正常响应。用户角度来看就是不会出现系统操作失败或者访问超时等问题</p><p>一致性：在分布式系统完成某写操作后任何读操作，都应该获取到该写操作写入的那个最新的值。相当于要求分布式系统中的各节点时时刻刻保持数据的一致性</p><p>分区容错性：指的分布式系统中的某个节点或者网络分区出现了故障的时候，整个系统仍然能对外提供满足一致性和可用性的服务，也就是说部分故障不影响整体使用</p><p>选择CA，放弃P  - &gt; 关系型数据库<br>选择CP，放弃A  - &gt; 分布式数据库<br>选择AP，放弃C  - &gt; 保证最终一致性，如BASE</p><h2 id="BASE"><a href="#BASE" class="headerlink" title="BASE"></a>BASE</h2><p><img src="https://img-blog.csdnimg.cn/20201231121247968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="Basically-Availble-—基本可用"><a href="#Basically-Availble-—基本可用" class="headerlink" title="Basically Availble —基本可用"></a>Basically Availble —基本可用</h3><p>基本可用是指分布式系统在出现不可预知故障的时候，允许损失部分可用性——但请注意，这绝不等价于系统不可用<br>响应时间上的损失：正常情况下，一个在线搜索引擎需要0.5秒内返回给用户相应的查询结果，但由于出现异常（比如系统部分机房发生断电或断网故障），查询结果的响应时间增加到了1~2秒<br>功能上的损失：正常情况下，在一个电子商务网站上进行购物，消费者几乎能够顺利地完成每一笔订单，但是在一些节日大促购物高峰的时候，由于消费者的购物行为激增，为了保护购物系统的稳定性，部分消费者可能会被引导到一个降级页面</p><h3 id="Soft-state-—软状态-柔性事务"><a href="#Soft-state-—软状态-柔性事务" class="headerlink" title="Soft-state —软状态/柔性事务"></a>Soft-state —软状态/柔性事务</h3><p>软状态，和硬状态相对，是指允许系统中的数据存在中间状态，并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时</p><h3 id="Eventual-Consistency-—最终一致性"><a href="#Eventual-Consistency-—最终一致性" class="headerlink" title="Eventual Consistency —最终一致性"></a>Eventual Consistency —最终一致性</h3><p>最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性<br>最终一致性是一种特殊的弱一致性：系统能够保证在没有其他新的更新操作的情况下，数据最终一定能够达到一致的状态，因此所有客户端对系统的数据访问都能够获取到最新的值<br>在没有发生故障的前提下，数据达到一致状态的时间延迟，取决于网络延迟，系统负载和数据复制方案设计等因素</p><h2 id="NWR-模型"><a href="#NWR-模型" class="headerlink" title="NWR 模型"></a>NWR 模型</h2><p><img src="https://img-blog.csdnimg.cn/2020123112130021.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>根据 CAP 理论，一致性，可用性和分区容错性最多只能满足两个，因此需要在一致性<br>和可用性之间做一平衡 NWR 模型是 Amazon 分布式存储引擎 Dynamo 中使用的技术，将<br>CAP 的选择权交给了用户，让用户自己选择 CAP 中的哪两个。<br>NWR 模型中：（下文中备份也可以理解为节点）<br> N = N 个备份，即复制的节点数量<br> R = 至少读取 R 个备份（成功读操作的最小节点数）<br> W = 要写入至少 W 份才认为成功（成功写操作的最小节点数）<br> 只需要 W+R &gt; N，就可以保证强一致性<br>在分布式系统中，一般都要有容错性，所以一般 N&gt;3<br>W+R &gt; N， 所以 R &gt; N-W 所以读取的份数一定要比总备份数减去确保写成功的节点 的差值要大。根据抽屉原理（是吧？），这个时候的读操作，肯定会读到一个最新的写 操作。<br>优化写性能(AP)（写多读少） 配置 W=1，N=R 这样，写完一个副本就成功，其他的副 本异步复制即可；而 R=N，那么读取数据的时候需要读全部节点的数据，（这个时候可 能会出现数据冲突，需要用户自行判断冲突数据）。<br>优化读性能(CP)（读多写少） 配置 W=N，R=1 这时，写完所有的副本才算成功，而读 的时候只需读一个副本即可（只能保证读任意节点都一致，不能保证是最新，此时可能 还没有写成功？）。<br>应用：如使用 NoSQL 做 cache 等业务的时候（只要写好了就可以读）？<br>平衡读写性能(AC) 当数据不多，单台能搞定，且不需要容错和扩展性的时候，可以配 置 N=1（只有一份数据），根据公式 W+R&gt;N，则 W=1，R=1。这种情况就简化为单机问 题了。</p><h2 id="两阶段提交协议"><a href="#两阶段提交协议" class="headerlink" title="两阶段提交协议"></a>两阶段提交协议</h2><p><img src="https://img-blog.csdnimg.cn/20201231121319727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020123112133092.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>优点：实现简单<br>缺点：同步阻塞问题<br>执行过程中，所有参与节点都是事务阻塞型的。当参与者占有公共资源时，其他第三方节点访问公共资源不得不处于阻塞状态。<br>单点故障<br>由于协调者的重要性，一旦协调者发生故障。参与者会一直阻塞下去。尤其在第二阶段，协调者发生故障，那么所有的参与者还都处于锁定事务资源的状态中，而无法继续完成事务操作。（如果是协调者挂掉，可以重新选举一个协调者，但是无法解决因为协调者宕机导致的参与者处于阻塞状态的问题）<br>数据不一致<br>在二阶段提交的阶段二中，当协调者向参与者发送commit请求之后，发生了局部网络异常或者在发送commit请求过程中协调者发生了故障，这回导致只有一部分参与者接受到了commit请求。而在这部分参与者接到commit请求之后就会执行commit操作。但是其他部分未接到commit请求的机器则无法执行事务提交。于是整个分布式系统便出现了数据不一致性的现象<br>二阶段无法解决的问题<br>协调者再发出commit消息之后宕机，而唯一接收到这条消息的参与者同时也宕机了。那么即使协调者通过选举协议产生了新的协调者，这条事务的状态也是不确定的，没人知道事务是否被已经提交</p><h2 id="NewSQL-数据库"><a href="#NewSQL-数据库" class="headerlink" title="NewSQL 数据库"></a>NewSQL 数据库</h2><p> 含义<br>NewSQL 是对各种新的可扩展/高性能数据库的简称<br> 具有 NoSQL 对海量数据的存储管理能力<br> 保持了传统数据库支持 ACID 和 SQL 等特性<br> 特点<br> 支持关系数据模型<br> 使用 SQL 作为其主要接口<br>举例——VoltDB<br>云数据库<br>定义：云数据库是指被优化或部署到一个虚拟计算环境中的数据库</p><h1 id="Hbase面向列的数据库"><a href="#Hbase面向列的数据库" class="headerlink" title="Hbase面向列的数据库"></a>Hbase面向列的数据库</h1><h2 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h2><p><img src="https://img-blog.csdnimg.cn/20201231121704574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231121717323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020123112172532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231121828759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231121838321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="HBase-的主要功能组件"><a href="#HBase-的主要功能组件" class="headerlink" title="HBase 的主要功能组件"></a>HBase 的主要功能组件</h3><p> 库函数：链接到每个客户端<br> 一个 HMaster 主服务器<br> 许多个 HRegion 服务器<br>一个 HBase 中存储了许多表。每个表都是一个 HRegion 集合，每个 HRegion 包含了位于某个域区间内的所有数据。<br>具体存储形式请参考闫中敏老师的 ppt </p><h3 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h3><p>组成：一个 HDFS 集群是由一个 NameNode 和若干个 DataNode 组成<br> NameNode 作为主服务器，管理文件系统的命名空间和客户端对文件的访问操作<br> DataNode 管理存储的数据<br>HDFS<br><img src="https://img-blog.csdnimg.cn/20201231121854838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="实例"><a href="#实例" class="headerlink" title="==实例=="></a>==实例==</h2><h3 id="手机数据"><a href="#手机数据" class="headerlink" title="手机数据"></a>手机数据</h3><p>需求：有一张数据表，其中包含手机号码字段</p><ol><li>查询一段时间内固定号码的所有数据 </li><li>查询一段时间内所有数据<br>分析：HBase要想查询快速，只能从rowKey上下手rowKey=phoneNum+时间 可以实现目标1，但是目标2很难实现rowKey=时间+phoneNum 可以实现目标2，但是目标1很难实现，且数据量越来越大可能导致热点问题<br>解决思路1：牺牲空间换时间，写数据时同时写入两张表，内容一样，只是一张表rowKey=phoneNum+时间，另一张表rowKey=时间+phoneNum<br>解决思路2：牺牲部分空间部分时间，两张表，一张全量表，rowKey=phoneNum+时间，另一张索引表只存rowKey=时间+phoneNum，目标1通过scan全量表就可以实现，目标2先scan索引表然后批量get全量表。<h3 id="滴滴"><a href="#滴滴" class="headerlink" title="滴滴"></a>滴滴</h3>场景：订单查询<br>这份数据使用过滴滴产品的用户都接触过，就是App上的历史订单<br>近期订单的查询会落在Redis，超过一定时间范围，或者当Redis不可用时，查询会落在HBase上<br><img src="https://img-blog.csdnimg.cn/20201231122034896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231122041460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h3 id="设计技巧"><a href="#设计技巧" class="headerlink" title="设计技巧"></a>设计技巧</h3><img src="https://img-blog.csdnimg.cn/20201231122111908.png" alt="在这里插入图片描述"></li></ol><p>热点<br><img src="https://img-blog.csdnimg.cn/20201231122117234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>反转<br><img src="https://img-blog.csdnimg.cn/2020123112213578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231122144947.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231122221904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>加盐<br><img src="https://img-blog.csdnimg.cn/20201231122235560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>WordCount和天气</p><p><img src="https://img-blog.csdnimg.cn/20201231122249775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231122303344.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231122313365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20201231122324905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="Redis键值对数据库"><a href="#Redis键值对数据库" class="headerlink" title="Redis键值对数据库"></a>Redis键值对数据库</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p><img src="https://img-blog.csdnimg.cn/20201231122348879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>Redis 是一个 key-value 数据库， 具有极高的并发读写性能，通过 key 迅速查找到 value，但只能通过 key 查询。key-value 很像是我们 java 中学过的map 结构，以“键值对”存储数据，每一个键（key）都会对应一个唯一的值（value）， 类似哈希表，可以通过 key 来添加、查询、删除，这样的数据结构性能极高， 扩展性亦良好。 支持的数据类型包括 string、list、set、zset(有序集合)和 hash 。支持 push/pop、add/remove、集合并交差等丰富的操作，而且操作都是原子性的，支持各种不同方式的排序<br><img src="https://img-blog.csdnimg.cn/20201231122655798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>Redis 使用实例 </p><ol><li>适用场景 数据高并发的读写 海量数据的读写 对扩展性要求高的数据 </li><li>不适用场景 需要事务支持(关系型数据库) 基于 sql 结构化查询储存，关系复<br>杂 </li><li>仔细读懂简单的文章投票网站的后端这个例子，注意其中为了实现功能恰好使用的数据结构。加深理解。为什么使用 set，为什么使用 zset？</li></ol><h2 id="应用示例"><a href="#应用示例" class="headerlink" title="==应用示例=="></a>==应用示例==</h2><h3 id="Redis-HyperLogLog"><a href="#Redis-HyperLogLog" class="headerlink" title="Redis HyperLogLog"></a>Redis HyperLogLog</h3><p><img src="https://img-blog.csdnimg.cn/20201231122706439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="文章投票排序"><a href="#文章投票排序" class="headerlink" title="文章投票排序"></a>文章投票排序</h3><p>如何使用Redis来构建一个简单的文章投票网站的后端<br><img src="https://img-blog.csdnimg.cn/20201231122714777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231122732241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231122738678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="MongoDB文档"><a href="#MongoDB文档" class="headerlink" title="MongoDB文档"></a>MongoDB文档</h1><h2 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h2><p><img src="https://img-blog.csdnimg.cn/20201231122802319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231122846636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h3><p>面向集合存储，易存储对象类型的数据<br>模式自由<br>支持动态查询<br>支持完全索引，包含内部对象<br>支持查询<br>支持复制和故障恢复<br>使用高效的二进制数据存储，包括大型对象（如视频）<br>自动处理碎片，以支持云计算层次的扩展性<br>支持RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言<br>文件存储格式为BSON（一种JSON的扩展）<br>可通过网络访问</p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><h5 id="网站数据"><a href="#网站数据" class="headerlink" title="网站数据"></a>网站数据</h5><p>o 非常适合实时的插入，更新与查询<br>o 具备网站实时数据存储所需的复制及高度伸缩性 </p><h5 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h5><p>o 适合作为信息基础设施的缓存层<br>o 避免过载：在系统重启之后，由 Mongo 搭建的持久化缓存层可以避免下<br>层的数据源过载 </p><h5 id="大尺寸、低价值的数据"><a href="#大尺寸、低价值的数据" class="headerlink" title="大尺寸、低价值的数据"></a>大尺寸、低价值的数据</h5><p>o 传统的关系型数据库存储某些数据代价可能会比较昂贵（在此之前，很多<br>时候程序员往往会选择传统的文件进行存储） </p><h5 id="高伸缩性的场景"><a href="#高伸缩性的场景" class="headerlink" title="高伸缩性的场景"></a>高伸缩性的场景</h5><p>o 非常适合由数十或数百台服务器组成的数据库<br>o Mongo 的路线图中已经包含对 MapReduce 引擎的内置支持（什么是路线<br>图？）<br>o 内置对 MapReduce 引擎的支持 </p><h5 id="用于对象及-JSON-数据的存储"><a href="#用于对象及-JSON-数据的存储" class="headerlink" title="用于对象及 JSON 数据的存储"></a>用于对象及 JSON 数据的存储</h5><p>o Mongo 的 BSON 数据格式非常适合文档化格式的存储及查询 </p><h3 id="不适用的场景"><a href="#不适用的场景" class="headerlink" title="不适用的场景"></a>不适用的场景</h3><h5 id="高度事务性的系统"><a href="#高度事务性的系统" class="headerlink" title="高度事务性的系统"></a>高度事务性的系统</h5><p>如银行或会计系统。传统的关系型数据库目前还是更适用于需要大量原子性复杂事务的<br>应用程序 </p><h5 id="传统的商业智能应用"><a href="#传统的商业智能应用" class="headerlink" title="传统的商业智能应用"></a>传统的商业智能应用</h5><p>o 针对特定问题的 BI 数据库会产生高度优化的查询方式<br>o 数据仓库可能是更合适的选择 </p><h5 id="需要-SQL"><a href="#需要-SQL" class="headerlink" title="需要 SQL"></a>需要 SQL</h5><h2 id="应用案例"><a href="#应用案例" class="headerlink" title="==应用案例=="></a>==应用案例==</h2><p><img src="https://img-blog.csdnimg.cn/20201231123156693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>数据采集服务首先对原始数据进行本地缓存，然后再将文件上传至MongoDB私有云，而没有把原始数据直接以键值对形式写入MongoDB私有云<br>一方面可以有效的保证原始数据的安全性，在很大程度上避免因网络中断，机房断电等异常造成的数据丢失<br>另一方面，缓存后的文件写入MongoDB，与键值对写入MongoDB相比，前者速度快的多，能更好适应高速采集数据流的大数据处理<br>利用多台服务器以MongoDB为基础构建了原始采集数据的云存储架构<br>通过复制集的应用，利用多台机器之间的异步复制达到故障转移和冗余。每三个Mongo服务构成一组复制集，彼此相互进行“心跳”检测，实现数据的高可用性<br><img src="https://img-blog.csdnimg.cn/20201231123113766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="Neo4j图数据库"><a href="#Neo4j图数据库" class="headerlink" title="Neo4j图数据库"></a>Neo4j图数据库</h1><h2 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h2><p><img src="https://img-blog.csdnimg.cn/20201231123229257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>相关</p><ol><li>定义：Neo4j 使用图相关的概念来描述数据模型，把数据保存为图中的节点以及节点之间的关系 </li><li>两个基本概念——节点和边：节点表示实体，边表示实体之间的关系；节点和边都可以有自己的属性；不同实体通过各种不同的关系关联起来，形成复杂的对象图 </li><li>查找和遍历主要使用深度优先搜索和广度优先搜索两种方式 </li></ol><p>特点 </p><ol><li>完整的 ACID 支持 </li><li>高可用性 </li><li>轻易扩展到上亿级别的节点和关系 </li><li>通过遍历工具高速检索数据</li></ol><p>遍历<br><img src="https://img-blog.csdnimg.cn/20201231123425797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="转换"><a href="#转换" class="headerlink" title="==转换=="></a>==转换==</h2><p><img src="https://img-blog.csdnimg.cn/20201231123435219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231123441495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231123446875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="==实例=="></a>==实例==</h2><h4 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h4><p><img src="https://img-blog.csdnimg.cn/2020123112352994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231123536743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="歌曲信息管理"><a href="#歌曲信息管理" class="headerlink" title="歌曲信息管理"></a><del>歌曲信息管理</del></h4><p><img src="https://img-blog.csdnimg.cn/20201231123542688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231123548590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201231123555245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="状态图"><a href="#状态图" class="headerlink" title="状态图"></a>状态图</h4><p><img src="https://img-blog.csdnimg.cn/20201231123601799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="用户角色"><a href="#用户角色" class="headerlink" title="用户角色"></a>用户角色</h4><p><img src="https://img-blog.csdnimg.cn/20201231123607562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h4 id="NoSQL非关系数据库并不难，认真看看老师PPT，-注意PPT的示例和各种数据库的画法-，背一下相关概念就好。不考代码或某种数据库的实际操作（实验里检查了）。"><a href="#NoSQL非关系数据库并不难，认真看看老师PPT，-注意PPT的示例和各种数据库的画法-，背一下相关概念就好。不考代码或某种数据库的实际操作（实验里检查了）。" class="headerlink" title="NoSQL非关系数据库并不难，认真看看老师PPT，==注意PPT的示例和各种数据库的画法==，背一下相关概念就好。不考代码或某种数据库的实际操作（实验里检查了）。"></a>NoSQL非关系数据库并不难，认真看看老师PPT，==注意PPT的示例和各种数据库的画法==，背一下相关概念就好。不考代码或某种数据库的实际操作（实验里检查了）。</h4><p><a href="https://blog.csdn.net/lwt1597532486/article/details/111999489">NoSQL2020-2021期末考试题回忆</a></p><p><font color=#999AAA ><a href="https://blog.csdn.net/lwt1597532486/article/details/111999489">https://blog.csdn.net/lwt1597532486/article/details/111999489</a></p><p><font color=#999AAA >选课推荐选闫老师，讲的仔细（<del>虽然没听</del>），并且ppt全面。听说我们实验太多了，就把NoSQL实验推到考完试（<del>都放假一周了</del>）后交，感激…</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据科学导论</title>
      <link href="/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA2020-2021%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95%E9%A2%98%E7%9B%AE%EF%BC%88%E5%9B%9E%E5%BF%86%EF%BC%89/"/>
      <url>/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA2020-2021%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95%E9%A2%98%E7%9B%AE%EF%BC%88%E5%9B%9E%E5%BF%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >简单回忆记录2020学年秋季学期的限选课数据科学导论的期末考试题目，记忆可能有偏差，请谅解。相关内容为个人观点，不是正确答案… TAT</font></p><p><font color=#999AAA >from 韬</font></p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="一、简答题"><a href="#一、简答题" class="headerlink" title="一、简答题"></a>一、简答题</h1><h2 id="1-描述大数据的开发管理全过程"><a href="#1-描述大数据的开发管理全过程" class="headerlink" title="1.描述大数据的开发管理全过程"></a>1.描述大数据的开发管理全过程</h2><p><font color=#999AAA >不知道为什么扯上了大数据，韬仍写了数据处理流程：采集、表示与存储、清洗、集成、分析、展现、决策</font></p><h2 id="2-探索性数据分析"><a href="#2-探索性数据分析" class="headerlink" title="2.探索性数据分析"></a>2.探索性数据分析</h2><p><font color=#999AAA >好像还有作用？韬记得啥就都写上了</font></p><h3 id="（1）探索性数据分析是什么？描述其过程"><a href="#（1）探索性数据分析是什么？描述其过程" class="headerlink" title="（1）探索性数据分析是什么？描述其过程"></a>（1）探索性数据分析是什么？描述其过程</h3><h3 id="（2）与传统数据分析相比有什么区别"><a href="#（2）与传统数据分析相比有什么区别" class="headerlink" title="（2）与传统数据分析相比有什么区别"></a>（2）与传统数据分析相比有什么区别</h3><p><font color=#999AAA >数据探索性分析:    </p><p><font color=#999AAA >指对已有的数据在尽量量少的先验假定情况下进行探索，逐步了解数据的特点</p><p><font color=#999AAA >数据探索性分析作用:    </p><p><font color=#999AAA >利用人机交互技术和数据可视化技术，通过不断揭示数据的规律和数据间的关联，引导 分析人员发现并认识以前不知道的数据模式或规律。对未知的数据模式和规律的探索是其价值所在。</p><p><font color=#999AAA >探索式数据分析的基本方法:</p><p><font color=#999AAA >(1)计算一些汇总统计量，了解数据的典型值，还可以通过确定异常值，了解数据的异常情况<br>(2)制图和指表，展示变量的分布情况、时间序列数据的变化趋势以及变量之间的关系。</p><h2 id="3-关系型数据库不能满足Web2-0应用的哪些数据需求？举例说明"><a href="#3-关系型数据库不能满足Web2-0应用的哪些数据需求？举例说明" class="headerlink" title="3.关系型数据库不能满足Web2.0应用的哪些数据需求？举例说明"></a>3.关系型数据库不能满足Web2.0应用的哪些数据需求？举例说明</h2><p><font color=#999AAA >相关示例可以参考（来自<a href="https://blog.csdn.net/lwt1597532486/article/details/112004608">NoSQL的资料</a><a href="https://blog.csdn.net/lwt1597532486/article/details/112004608）">https://blog.csdn.net/lwt1597532486/article/details/112004608）</a></p><p><font color=#999AAA >关系数据库的不足：大量数据的写入处理；表结构变更及建立索引；字段不固定的应用；对简单查询需要快速返回结果的处理<br>NoSQL数据库的优势：易于数据的分散；提升性能和增大规模；模式自由；扩展性好<br>NewSQL 是对各种新的可扩展/高性能数据库的简称 ，具有 NoSQL 对海量数据的存储管理能力 ，保持了传统数据库支持 ACID 和 SQL 等特性 </p><p><font color=#999AAA >韬主要根据关系数据库的不好和其他数据库的好扯了一些乱七八糟的…</p><h1 id="二、设计题"><a href="#二、设计题" class="headerlink" title="二、设计题"></a>二、设计题</h1><h2 id="1-假设新浪微博使用Redis键值式数据库存储关注表、粉丝表"><a href="#1-假设新浪微博使用Redis键值式数据库存储关注表、粉丝表" class="headerlink" title="1.假设新浪微博使用Redis键值式数据库存储关注表、粉丝表"></a>1.假设新浪微博使用Redis键值式数据库存储关注表、粉丝表</h2><h3 id="（1）这样做的好处"><a href="#（1）这样做的好处" class="headerlink" title="（1）这样做的好处"></a>（1）这样做的好处</h3><h3 id="（2）粉丝表的数据动辄上亿，如何构建索引机制实现快速根据粉丝ID查询粉丝表"><a href="#（2）粉丝表的数据动辄上亿，如何构建索引机制实现快速根据粉丝ID查询粉丝表" class="headerlink" title="（2）粉丝表的数据动辄上亿，如何构建索引机制实现快速根据粉丝ID查询粉丝表"></a>（2）粉丝表的数据动辄上亿，如何构建索引机制实现快速根据粉丝ID查询粉丝表</h3><p><font color=#999AAA >Redis的相关信息<br>数据高并发的读写 ；海量数据的读写；对扩展性要求高的数据 ；支持的数据类型包括 string、list、set、zset(有序集合)和 hash ；支持 push/pop、add/remove、集合并交差等丰富的操作，而且操作都是原子的<br>韬不知道怎么弄索引机制好..</p><h2 id="2-MapReduce"><a href="#2-MapReduce" class="headerlink" title="2.MapReduce"></a>2.MapReduce</h2><h3 id="（1）描述MapReduce实现表的自然连接的过程"><a href="#（1）描述MapReduce实现表的自然连接的过程" class="headerlink" title="（1）描述MapReduce实现表的自然连接的过程"></a>（1）描述MapReduce实现表的自然连接的过程</h3><h3 id="（2）描述map函数和reduce函数的逻辑实现"><a href="#（2）描述map函数和reduce函数的逻辑实现" class="headerlink" title="（2）描述map函数和reduce函数的逻辑实现"></a>（2）描述map函数和reduce函数的逻辑实现</h3><p><font color=#999AAA >网上的简单明了的图解释有很多，可以自己找个喜欢的，<del>学习都这么痛苦了尽量找个顺眼的吧</del><br><a href="https://www.cnblogs.com/fanweisheng/p/11262303.html">MapReduce自然连接图解</a><br><a href="https://www.cnblogs.com/fanweisheng/p/11262303.html">https://www.cnblogs.com/fanweisheng/p/11262303.html</a></p><h1 id="三、计算题"><a href="#三、计算题" class="headerlink" title="三、计算题"></a>三、计算题</h1><h2 id="1-计算TF-IDF。"><a href="#1-计算TF-IDF。" class="headerlink" title="1.计算TF-IDF。"></a>1.计算TF-IDF。</h2><p><font color=#999AAA >下图为示意图，原题为“中国”“软件”“开发”，其他数据好像一模一样。老师应该是懒得改…</p><h3 id="（1）计算IDF和TF-IDF"><a href="#（1）计算IDF和TF-IDF" class="headerlink" title="（1）计算IDF和TF-IDF"></a>（1）计算IDF和TF-IDF</h3><h3 id="（2）根据上列计算结果判断该文章的重要词汇"><a href="#（2）根据上列计算结果判断该文章的重要词汇" class="headerlink" title="（2）根据上列计算结果判断该文章的重要词汇"></a>（2）根据上列计算结果判断该文章的重要词汇</h3><p><font color=#999AAA >韬还以为就除一下没加log，裂开…<br>TF即词频(Term Frequency)，每篇文档中关键词的频率（该文档单词/该文档单词总数）<br>IDF即逆文档频率(Inverse Document Frequency)，文档总数/关键词t出现的文档数目，即I D F ( t ) ＝ l n ( ( 1 + ∣ D ∣ ) / ∣ D t ∣ ) IDF(t)＝ln((1+|D|)/|D_t|)IDF(t)＝ln((1+∣D∣)/∣D_t ∣)（还有log等形式，自然对数被证明是最有效的一个公式）<br><a href="https://blog.csdn.net/hao5335156/article/details/87835851">TF-IDF的定义及计算</a><br><img src="https://img-blog.csdnimg.cn/20210102164346207.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70#pic_center" alt="网络图片，侵删"></p><p><font color=#999AAA >网络图片，侵删</p><h2 id="2-用户和音乐喜好的随机游走"><a href="#2-用户和音乐喜好的随机游走" class="headerlink" title="2.用户和音乐喜好的随机游走"></a>2.用户和音乐喜好的随机游走</h2><h3 id="（1）根据下表画用户和音乐喜好的二分图"><a href="#（1）根据下表画用户和音乐喜好的二分图" class="headerlink" title="（1）根据下表画用户和音乐喜好的二分图"></a>（1）根据下表画用户和音乐喜好的二分图</h3><h3 id="（2）Alice喜欢音乐1、4、5，接下来应该推荐哪首歌给她？使用随机游走推断，并写出验证过程。"><a href="#（2）Alice喜欢音乐1、4、5，接下来应该推荐哪首歌给她？使用随机游走推断，并写出验证过程。" class="headerlink" title="（2）Alice喜欢音乐1、4、5，接下来应该推荐哪首歌给她？使用随机游走推断，并写出验证过程。"></a>（2）Alice喜欢音乐1、4、5，接下来应该推荐哪首歌给她？使用随机游走推断，并写出验证过程。</h3><p><img src="https://img-blog.csdnimg.cn/20210102185347202.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><font color=#999AAA >手绘图，数据记忆中应该差不多<br><a href="https://blog.csdn.net/qq_38842357/article/details/80872480">随机游走的简单介绍</a><a href="https://blog.csdn.net/qq_38842357/article/details/80872480">https://blog.csdn.net/qq_38842357/article/details/80872480</a></p><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><h3 id="数据科学导论这门课是大数据方向的限选课，但是韬（很后悔选）快乐地学到了很多知识-。-注意课程有实验有考试-。这位前辈的笔记带起了整门课，感谢…山东大学数据科学导论笔记https-blog-csdn-net-zzc-zhuyu-article-details-103914217"><a href="#数据科学导论这门课是大数据方向的限选课，但是韬（很后悔选）快乐地学到了很多知识-。-注意课程有实验有考试-。这位前辈的笔记带起了整门课，感谢…山东大学数据科学导论笔记https-blog-csdn-net-zzc-zhuyu-article-details-103914217" class="headerlink" title="数据科学导论这门课是大数据方向的限选课，但是韬（很后悔选）快乐地学到了很多知识 。==注意课程有实验有考试==。这位前辈的笔记带起了整门课，感谢…山东大学数据科学导论笔记https://blog.csdn.net/zzc_zhuyu/article/details/103914217"></a>数据科学导论这门课是大数据方向的限选课，但是韬（<del>很后悔选</del>）快乐地学到了很多知识 。==注意课程有实验有考试==。这位前辈的笔记带起了整门课，感谢…<a href="https://blog.csdn.net/zzc_zhuyu/article/details/103914217">山东大学数据科学导论笔记</a><a href="https://blog.csdn.net/zzc_zhuyu/article/details/103914217">https://blog.csdn.net/zzc_zhuyu/article/details/103914217</a></h3><p>这个写的也挺好<a href="https://www.xiaoheidiannao.com/15960.html">数导复习</a></p><p><font color=#999AAA ><del>实验很多很多（大概5+5吧，后来放宽了可以选做），一节2学分的课有两个老师上不同内容不同进度的课，每个老师有不同的多个实验，甚至还有难以水的公开课，</del> 真的超值！！！</p><p><font color=#999AAA >图片为网络图片或来自他人网页，附部分链接。（同时感谢翔同学辅助回忆、提供相似题目图片）</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据科学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程项目实训 壹</title>
      <link href="/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD_(%E5%88%9D~2021-3-21)/"/>
      <url>/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD_(%E5%88%9D~2021-3-21)/</url>
      
        <content type="html"><![CDATA[<h2 id="山东大学软件工程项目实训-初-2021-3-21"><a href="#山东大学软件工程项目实训-初-2021-3-21" class="headerlink" title="山东大学软件工程项目实训(初~2021-3-21)"></a>山东大学软件工程项目实训(初~2021-3-21)</h2><p>计划开始的第一周，我们小组仔细探讨了项目有关流程、整体框架、还有部分实现细节。并且对需求进行分析，设计好主要实体对象（简单实现实体类），将功能划分到各个模块。</p><h3 id="本阶段工作进展"><a href="#本阶段工作进展" class="headerlink" title="本阶段工作进展"></a>本阶段工作进展</h3><p>讨论完毕后，我们马上投入工作。前端工作者学习Vue，我作为后端工作者，简单复习Springboot框架和学习MyBatis后开始与另一后端工作者讨论后端框架与实现。</p><h4 id="1-构建Git和GitHub"><a href="#1-构建Git和GitHub" class="headerlink" title="1.构建Git和GitHub"></a>1.构建Git和GitHub</h4><p>为了两人并行开发代码，我们创建相关代码库协同开发程序。</p><h4 id="2-构建MySQL"><a href="#2-构建MySQL" class="headerlink" title="2.构建MySQL"></a>2.构建MySQL</h4><p>对于大部分实体类和关系暂时不需要Redis数据库，创建MySQL数据库储存相关数据。<br>根据实体类创建相关表，表单属性暂定后期再修改。根据生活经验简单添加了几条实验数据用于测试。</p><h4 id="3-初步编写实体类"><a href="#3-初步编写实体类" class="headerlink" title="3.初步编写实体类"></a>3.初步编写实体类</h4><p>思考相关方法后，初步编写实体类和构建相关属性。充分备注描述，方便后期理解修改。</p><h4 id="4-MyBatis框架初步使用"><a href="#4-MyBatis框架初步使用" class="headerlink" title="4.MyBatis框架初步使用"></a>4.MyBatis框架初步使用</h4><p>添加依赖设置数据库相关信息，成功连接MySQL数据库</p><h4 id="5-初步实现DAO层"><a href="#5-初步实现DAO层" class="headerlink" title="5.初步实现DAO层"></a>5.初步实现DAO层</h4><p>经过另一后端工作者的指点，简单完成UserMapper.java和UserMapper.xml，实现对数据库的简单操作。</p><p>实现User的简单方法<br><img src="https://img-blog.csdnimg.cn/20210318195834129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210318195843778.png" alt="在这里插入图片描述"></p><h3 id="期间遇到的问题"><a href="#期间遇到的问题" class="headerlink" title="期间遇到的问题"></a>期间遇到的问题</h3><p><img src="https://img-blog.csdnimg.cn/20210318195753396.png" alt="找不到文件位置"><br>找不到文件位置<br><img src="https://img-blog.csdnimg.cn/20210318195812134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="下一阶段工作目标"><a href="#下一阶段工作目标" class="headerlink" title="下一阶段工作目标"></a>下一阶段工作目标</h3><p>继续完成相关数据库与程序底层交接的程序设计工作。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目实训 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程项目实训 贰</title>
      <link href="/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD_(2021-4)%EF%BC%881%EF%BC%89/"/>
      <url>/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD_(2021-4)%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="软件工程项目实训-2021-3-21-2021-4"><a href="#软件工程项目实训-2021-3-21-2021-4" class="headerlink" title="软件工程项目实训(2021-3-21~2021-4)"></a>软件工程项目实训(2021-3-21~2021-4)</h2><p><strong>继续完成相关数据库与程序底层交接的程序设计工作。</strong></p><h3 id="一、本阶段工作进展"><a href="#一、本阶段工作进展" class="headerlink" title="一、本阶段工作进展"></a>一、本阶段工作进展</h3><h5 id="1-确定流程"><a href="#1-确定流程" class="headerlink" title="1.确定流程"></a>1.确定流程</h5><ul><li>事务状态state<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">static</span> final <span class="title class_">Integer</span> <span class="variable constant_">STATE_READY</span> = <span class="number">10</span>;                  <span class="comment">//准备好可以审批</span></span><br><span class="line">public <span class="keyword">static</span> final <span class="title class_">Integer</span> <span class="variable constant_">STATE_APPROVING</span> = <span class="number">11</span>;              <span class="comment">//审批中</span></span><br><span class="line">public <span class="keyword">static</span> final <span class="title class_">Integer</span> <span class="variable constant_">STATE_APPROVE_FAILED</span> = <span class="number">12</span>;         <span class="comment">//审批失败</span></span><br><span class="line">public <span class="keyword">static</span> final <span class="title class_">Integer</span> <span class="variable constant_">STATE_END</span> = <span class="number">13</span>;                    <span class="comment">//审批结束</span></span><br></pre></td></tr></table></figure></li><li>事务类型kind<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">static</span> final <span class="title class_">Integer</span> <span class="variable constant_">KIND_REIMBURSEMENT_AUDIT</span> = <span class="number">20</span>;    <span class="comment">//报销审计</span></span><br><span class="line">public <span class="keyword">static</span> final <span class="title class_">Integer</span> <span class="variable constant_">KIND_FOLLOW_UP_AUDIT</span> = <span class="number">21</span>;        <span class="comment">//跟踪审计</span></span><br></pre></td></tr></table></figure></li><li>提示信息<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">OK</span>(<span class="string">&quot;00200&quot;</span>,<span class="string">&quot;成功&quot;</span>),</span><br><span class="line"><span class="title function_">USER_INPUT_ERROR</span>(<span class="string">&quot;00400&quot;</span>, <span class="string">&quot;用户输入错误&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-整理对象属性"><a href="#2-整理对象属性" class="headerlink" title="2. 整理对象属性"></a>2. 整理对象属性</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    private <span class="title class_">Long</span> id;        <span class="comment">//用户id</span></span><br><span class="line">    private <span class="title class_">String</span> username;   <span class="comment">//用户名</span></span><br><span class="line">    private <span class="title class_">String</span> password;   <span class="comment">//用户密码</span></span><br><span class="line">    private <span class="title class_">String</span> name;      <span class="comment">//用户姓名</span></span><br><span class="line">    private <span class="title class_">Integer</span> post;       <span class="comment">//用户职务</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">class</span> <span class="title class_">MaterialLog</span> &#123;</span><br><span class="line">    private <span class="title class_">Long</span> id;<span class="comment">//材料id</span></span><br><span class="line">    private <span class="title class_">String</span> name;            <span class="comment">//材料名称</span></span><br><span class="line">    private <span class="title class_">String</span> remark;          <span class="comment">//备注</span></span><br><span class="line">    private <span class="title class_">Long</span> affairId;          <span class="comment">//所属的事务</span></span><br><span class="line">    private <span class="title class_">Date</span> createTime;        <span class="comment">//创建时间</span></span><br><span class="line">    private <span class="title class_">Long</span> authorId;          <span class="comment">//上传用户id</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">class</span> <span class="title class_">ApprovalLog</span> &#123;</span><br><span class="line">    private <span class="title class_">Long</span> id;<span class="comment">//审计操作的log的id</span></span><br><span class="line">    private <span class="title class_">Long</span> affairId;         <span class="comment">//所属的事务</span></span><br><span class="line">    private <span class="title class_">Date</span> createTime;       <span class="comment">//审批时间</span></span><br><span class="line">    private <span class="title class_">Boolean</span> isPass;        <span class="comment">//是否通过</span></span><br><span class="line">    private <span class="title class_">Boolean</span> isEditSource;  <span class="comment">//是否修改附件</span></span><br><span class="line">    private <span class="title class_">Long</span> authorId;         <span class="comment">//审批人id</span></span><br><span class="line">    private <span class="title class_">String</span> ip;             <span class="comment">//审批人ip</span></span><br><span class="line">    private <span class="title class_">String</span> msg;            <span class="comment">//审批结论</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">class</span> <span class="title class_">Affair</span> &#123;</span><br><span class="line">    private <span class="title class_">Long</span> id;                    <span class="comment">//事务id</span></span><br><span class="line">    private <span class="title class_">String</span> name;                <span class="comment">//事务名</span></span><br><span class="line">    private <span class="title class_">String</span> remark;              <span class="comment">//备注</span></span><br><span class="line">    private <span class="title class_">Integer</span> kind;               <span class="comment">//事务类型</span></span><br><span class="line">    private <span class="title class_">Integer</span> state;              <span class="comment">//审批状态</span></span><br><span class="line">    private <span class="title class_">Date</span> startTime;             <span class="comment">//创建时间</span></span><br><span class="line">    private <span class="title class_">Date</span> endTime;               <span class="comment">//结束时间</span></span><br><span class="line">    private <span class="title class_">Long</span> promoterId;            <span class="comment">//事务发起人id</span></span><br><span class="line">    private <span class="title class_">Integer</span> approverPost;       <span class="comment">//当前审批人职务</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-构建修正MySQL数据库相关表单"><a href="#3-构建修正MySQL数据库相关表单" class="headerlink" title="3. 构建修正MySQL数据库相关表单"></a>3. 构建修正MySQL数据库相关表单</h5><ul><li>user表<br><img src="https://img-blog.csdnimg.cn/20210421151240541.png" alt="user表"></li><li><p>MaterialLog 表<br><img src="https://img-blog.csdnimg.cn/20210421151502500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>外键<br><img src="https://img-blog.csdnimg.cn/20210421151639630.png" alt="在这里插入图片描述"></p></li><li><p>ApprovalLog 表<br><img src="https://img-blog.csdnimg.cn/20210421151702407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>外键<br><img src="https://img-blog.csdnimg.cn/20210421151720920.png" alt="在这里插入图片描述"></p></li><li><p>Affair 表<br><img src="https://img-blog.csdnimg.cn/20210421151742251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>外键<br><img src="https://img-blog.csdnimg.cn/20210421151822421.png" alt="在这里插入图片描述"></p><h3 id="二、实现相关连接"><a href="#二、实现相关连接" class="headerlink" title="二、实现相关连接"></a>二、实现相关连接</h3><p>后端底层 DAO 层通过 mapper 与 MySQL 数据库进行连接。通过 MyBatis 简介明了地实现连接的相关函数。</p></li></ul><p><em>以下为原始实现，后来修改了，已失效</em></p><p>AffairChangeMapper 实现返回值为 AffairChange 对象，插入新的AffairChange<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.shenji.audit.dao.AffairChangeMapper&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.shenji.audit.model.AffairChange&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;kind&quot;</span> <span class="attr">property</span>=<span class="string">&quot;kind&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;date&quot;</span> <span class="attr">property</span>=<span class="string">&quot;date&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;DATE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;author_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;authorId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;affair_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;affairId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;message&quot;</span> <span class="attr">property</span>=<span class="string">&quot;message&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertOne&quot;</span>&gt;</span></span><br><span class="line">        insert into affair_change values (</span><br><span class="line">                                      #&#123;id&#125;,</span><br><span class="line">                                      #&#123;kind&#125;,</span><br><span class="line">                                      #&#123;date&#125;,</span><br><span class="line">                                      #&#123;authorId&#125;,</span><br><span class="line">                                      #&#123;affairId&#125;,</span><br><span class="line">                                      #&#123;message&#125;</span><br><span class="line">                                  )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><br>AffairMapper 实现返回值为 Affair 对象，从数据库按照id查找Affair，插入新的Affair,更新Affair<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.shenji.audit.dao.AffairMapper&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.shenji.audit.model.Affair&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">property</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;kind&quot;</span> <span class="attr">property</span>=<span class="string">&quot;kind&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;state&quot;</span> <span class="attr">property</span>=<span class="string">&quot;state&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;start_time&quot;</span> <span class="attr">property</span>=<span class="string">&quot;startTime&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;DATE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;end_time&quot;</span> <span class="attr">property</span>=<span class="string">&quot;endTime&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;DATE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;approver_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;approverId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;promoter_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;promoterId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAffairById&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">        SELECT *</span><br><span class="line">        FROM affair</span><br><span class="line">        WHERE id=#&#123;affairId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertOne&quot;</span>&gt;</span></span><br><span class="line">        insert into affair values (</span><br><span class="line">                                   #&#123;id&#125;,</span><br><span class="line">                                   #&#123;name&#125;,</span><br><span class="line">                                   #&#123;remark&#125;,</span><br><span class="line">                                   #&#123;kind&#125;,</span><br><span class="line">                                   #&#123;state&#125;,</span><br><span class="line">                                   #&#123;startTime&#125;,</span><br><span class="line">                                   #&#123;endTime&#125;,</span><br><span class="line">                                   #&#123;approverId&#125;,</span><br><span class="line">                                   #&#123;promoterId&#125;</span><br><span class="line">                                  )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateState&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.shenji.audit.model.Affair&quot;</span>&gt;</span></span><br><span class="line">        update affair</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;state != null&quot;</span>&gt;</span></span><br><span class="line">                state = #&#123;state&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where id = #&#123;affairId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><br>MaterialMapper 实现返回值为 Material 对象，插入新的Material<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.shenji.audit.dao.MaterialMapper&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.shenji.audit.model.Material&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;affair_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;affairId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;affair_change_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;affairChangeId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;create_time&quot;</span> <span class="attr">property</span>=<span class="string">&quot;createTime&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;DATE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;author_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;authorId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;content_url&quot;</span> <span class="attr">property</span>=<span class="string">&quot;contentUrl&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertOne&quot;</span>&gt;</span></span><br><span class="line">        insert into material values (</span><br><span class="line">                                      #&#123;id&#125;,</span><br><span class="line">                                      #&#123;name&#125;,</span><br><span class="line">                                      #&#123;affairId&#125;,</span><br><span class="line">                                      #&#123;affairChangeId&#125;,</span><br><span class="line">                                      #&#123;createTime&#125;,</span><br><span class="line">                                      #&#123;authorId&#125;,</span><br><span class="line">                                      #&#123;contentUrl&#125;</span><br><span class="line">                                  )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><br>ReportMapper 实现返回值为 Report 对象，根据id查找Report，插入新的Report<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.shenji.audit.dao.ReportMapper&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.shenji.audit.model.Report&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;content_url&quot;</span> <span class="attr">property</span>=<span class="string">&quot;contentUrl&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;affair_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;affairId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;state&quot;</span> <span class="attr">property</span>=<span class="string">&quot;state&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectOne&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">        SELECT *</span><br><span class="line">        FROM report</span><br><span class="line">        WHERE id=#&#123;reportId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertOne&quot;</span>&gt;</span></span><br><span class="line">        insert into report values (</span><br><span class="line">                                      #&#123;id&#125;,</span><br><span class="line">                                      #&#123;name&#125;,</span><br><span class="line">                                      #&#123;contentUrl&#125;,</span><br><span class="line">                                      #&#123;affairId&#125;,</span><br><span class="line">                                      #&#123;state&#125;</span><br><span class="line">                                  )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><br>UserMapper 实现返回值为 User 对象，查询所有User<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.shenji.audit.dao.UserMapper&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.shenji.audit.model.User&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="三、进行相关接口测试"><a href="#三、进行相关接口测试" class="headerlink" title="三、进行相关接口测试"></a>三、进行相关接口测试</h3><p>陈神完成相关服务器后端接口，韬测试相关接口<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://baixx.site:18080/swagger-ui/#/</span><br></pre></td></tr></table></figure></p><p><font color=#999AAA ><em>接口版本1.0，现已失效</em></p><h5 id="事务接口"><a href="#事务接口" class="headerlink" title="事务接口"></a>事务接口</h5><h6 id="获取全部事务-1"><a href="#获取全部事务-1" class="headerlink" title="获取全部事务 1"></a>获取全部事务 1</h6><p><img src="https://img-blog.csdnimg.cn/20210421154036225.png" alt="在这里插入图片描述"></p><h6 id="创建跟踪审计-1"><a href="#创建跟踪审计-1" class="headerlink" title="创建跟踪审计    1"></a>创建跟踪审计    1</h6><p><img src="https://img-blog.csdnimg.cn/20210421153902719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210421153939344.png" alt="在这里插入图片描述"></p><h6 id="获取我发起的事务-1"><a href="#获取我发起的事务-1" class="headerlink" title="获取我发起的事务    1"></a>获取我发起的事务    1</h6><p>暂时没有id输入，输出了与1相关的项目<br><img src="https://img-blog.csdnimg.cn/20210421154051863.png" alt="在这里插入图片描述"></p><h6 id="获取待我审批的事务"><a href="#获取待我审批的事务" class="headerlink" title="获取待我审批的事务"></a>获取待我审批的事务</h6><p>暂时没有id输入，输出了需要1审批的项目<br><img src="https://img-blog.csdnimg.cn/20210421154101581.png" alt="在这里插入图片描述"></p><h6 id="创建报销审计-1"><a href="#创建报销审计-1" class="headerlink" title="创建报销审计 1"></a>创建报销审计 1</h6><p>暂时没有approveid和promoterid输入，promoterid固定为2？？？<br>关于审批的职位12345，需要谁审批？<br><img src="https://img-blog.csdnimg.cn/20210421154108787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>创建成功<br><img src="https://img-blog.csdnimg.cn/202104211541142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="审批接口"><a href="#审批接口" class="headerlink" title="审批接口"></a>审批接口</h4><h6 id="审批事务"><a href="#审批事务" class="headerlink" title="审批事务"></a>审批事务</h6><p>出错Internal Server Error，status500<br>TestApprove-test02-nopass<br><img src="https://img-blog.csdnimg.cn/20210421154123144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>TestApprove-test02-pass<br><img src="https://img-blog.csdnimg.cn/20210421154132999.png" alt="在这里插入图片描述"></p><h6 id="获取pdf文件"><a href="#获取pdf文件" class="headerlink" title="获取pdf文件"></a>获取pdf文件</h6><p>测试<br><img src="https://img-blog.csdnimg.cn/20210421154201665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>想要生成这个<br><img src="https://img-blog.csdnimg.cn/20210421154208745.png" alt="在这里插入图片描述"></p><p>但是乱码了，我下载（成功）看了看损坏了（文件损坏打不开），猜测是中文编码格式乱码了<br><img src="https://img-blog.csdnimg.cn/20210421154217971.png" alt="在这里插入图片描述"></p><h6 id="上传报告"><a href="#上传报告" class="headerlink" title="上传报告"></a>上传报告</h6><p>传空报错<br><img src="https://img-blog.csdnimg.cn/20210421154229294.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210421154249522.png" alt="在这里插入图片描述"></p><h6 id="获取源文件列表-1"><a href="#获取源文件列表-1" class="headerlink" title="获取源文件列表        1"></a>获取源文件列表        1</h6><p>获取成功<br><img src="https://img-blog.csdnimg.cn/20210421154303951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>测试空的新项目成功<br><img src="https://img-blog.csdnimg.cn/20210421154308787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="获取源文件"><a href="#获取源文件" class="headerlink" title="获取源文件"></a>获取源文件</h6><p>测试获取审计处新一代物联化信息管理系统建设方案.docx还是乱码了<br>下载（成功）看了，只有名字乱码了，内容没事，猜测是中文编码格式乱码了<br><img src="https://img-blog.csdnimg.cn/20210421154314984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210421154320538.png" alt="在这里插入图片描述"></p><p>测试不存在的文件，不存在的id<br><img src="https://img-blog.csdnimg.cn/20210421154329401.png" alt="在这里插入图片描述"></p><h4 id="资料接口"><a href="#资料接口" class="headerlink" title="资料接口"></a>资料接口</h4><h6 id="获取资料列表"><a href="#获取资料列表" class="headerlink" title="获取资料列表"></a>获取资料列表</h6><p>获取空成功<br>获取相关资料成功<br><img src="https://img-blog.csdnimg.cn/20210421154337601.png" alt="在这里插入图片描述"></p><h6 id="上传资料"><a href="#上传资料" class="headerlink" title="上传资料"></a>上传资料</h6><p>暂时必须手动填id，后期自动生成<br><img src="https://img-blog.csdnimg.cn/20210421154343713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>不需要传入上传人id<br><img src="https://img-blog.csdnimg.cn/20210421154437360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>填错误id，出错<br><img src="https://img-blog.csdnimg.cn/20210421154445335.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210421154504825.png" alt="在这里插入图片描述"></p><h6 id="删除资料文件"><a href="#删除资料文件" class="headerlink" title="删除资料文件"></a>删除资料文件</h6><p>未测试</p><h6 id="获取资料文件"><a href="#获取资料文件" class="headerlink" title="获取资料文件"></a>获取资料文件</h6><p>成功获取相关资料，下载查看没问题<br><img src="https://img-blog.csdnimg.cn/20210421154522835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>尝试获取不存在的文件<br><img src="https://img-blog.csdnimg.cn/20210421154530198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>404    not    found<br><img src="https://img-blog.csdnimg.cn/20210421154538830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="获取资料文件列表-1"><a href="#获取资料文件列表-1" class="headerlink" title="获取资料文件列表    1"></a>获取资料文件列表    1</h6><p>成功获取相关资料<br><img src="https://img-blog.csdnimg.cn/20210421154554165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功获取不存在的id的空</p><h3 id="三、下一阶段工作目标"><a href="#三、下一阶段工作目标" class="headerlink" title="三、下一阶段工作目标"></a>三、下一阶段工作目标</h3><p><strong>发现用户安全问题，需要token工具类，进行token代码开发和拦截器过滤器开发</strong></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目实训 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程项目实训 叁</title>
      <link href="/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD_(2021-4)%EF%BC%883%EF%BC%89/"/>
      <url>/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD_(2021-4)%EF%BC%883%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="山东大学软件工程项目实训-2021-4"><a href="#山东大学软件工程项目实训-2021-4" class="headerlink" title="山东大学软件工程项目实训(2021-4)"></a>山东大学软件工程项目实训(2021-4)</h2><p><strong>实现过滤器，联系前端进行调试</strong></p><h3 id="一、本阶段工作进展"><a href="#一、本阶段工作进展" class="headerlink" title="一、本阶段工作进展"></a>一、本阶段工作进展</h3><h5 id="1-修改token工具类"><a href="#1-修改token工具类" class="headerlink" title="1.修改token工具类"></a>1.修改token工具类</h5><p><strong>加入快过期更新</strong><br>抛弃状态，直接抛出错误<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断 token 是否 有效0/快过期1/过期2/无效3</span></span><br><span class="line">public <span class="keyword">static</span> <span class="title class_">String</span> <span class="title function_">checkToken</span>(<span class="params"><span class="built_in">String</span> token</span>) &#123;</span><br><span class="line">    <span class="title class_">String</span> result;</span><br><span class="line">    <span class="comment">// 判null</span></span><br><span class="line">    <span class="keyword">if</span> (token == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;500 (Error: token is null in checkToken)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取 token 中的信息 ( id ExpireTime )</span></span><br><span class="line">    <span class="title class_">String</span> content;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        content = <span class="variable constant_">JWT</span>.<span class="title function_">decode</span>(token).<span class="title function_">getAudience</span>().<span class="title function_">get</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="title class_">JWTDecodeException</span> j) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;500 (jwt decode error)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">String</span> secret = secretKey + content.<span class="title function_">split</span>(<span class="string">&quot;;;&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 验证 token</span></span><br><span class="line">    <span class="title class_">JWTVerifier</span> jwtVerifier = <span class="variable constant_">JWT</span>.<span class="built_in">require</span>(<span class="title class_">Algorithm</span>.<span class="title class_">HMAC256</span>(secret)).<span class="title function_">build</span>();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        jwtVerifier.<span class="title function_">verify</span>(token);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="title class_">JWTVerificationException</span> e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;500 (jwt verify error)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查看 token 的 有效期</span></span><br><span class="line">    long expireTime = <span class="title class_">Long</span>.<span class="title function_">parseLong</span>(content.<span class="title function_">split</span>(<span class="string">&quot;;;&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">    long currentTime = <span class="title class_">System</span>.<span class="title function_">currentTimeMillis</span>();</span><br><span class="line">    <span class="comment">//      已过期</span></span><br><span class="line">    <span class="keyword">if</span> (currentTime &gt; expireTime)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;500 (token expire)&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//      快过期</span></span><br><span class="line">        <span class="keyword">if</span> (expireTime - currentTime &lt; tokenNearExpireTime)&#123;</span><br><span class="line">            long newExpireTime = <span class="title class_">System</span>.<span class="title function_">currentTimeMillis</span>() + tokenExpireTime*<span class="number">60</span>*1000L;</span><br><span class="line">            <span class="title class_">String</span> newToken= <span class="variable constant_">JWT</span>.<span class="title function_">create</span>().<span class="title function_">withAudience</span>(content.<span class="title function_">split</span>(<span class="string">&quot;;;&quot;</span>)[<span class="number">0</span>] +<span class="string">&quot;;;&quot;</span>+ newExpireTime)</span><br><span class="line">                    .<span class="title function_">sign</span>(<span class="title class_">Algorithm</span>.<span class="title class_">HMAC256</span>(secret));</span><br><span class="line">            result = newToken;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//      正常有效</span></span><br><span class="line">            result = token;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>原修改类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    public static Map&lt;String,String&gt; checkToken(String token) &#123;</span></span><br><span class="line"><span class="comment">//        Map&lt;String, String&gt; res = new HashMap&lt;String, String&gt;();</span></span><br><span class="line"><span class="comment">//        // 判null</span></span><br><span class="line"><span class="comment">//        if (token == null) &#123;</span></span><br><span class="line"><span class="comment">//            res.put(&quot;state&quot;,&quot;invalid&quot;);</span></span><br><span class="line"><span class="comment">//            res.put(&quot;token&quot;,null);</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException(&quot;Error: token is null in checkToken &quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        // 获取 token 中的信息 ( id ExpireTime )</span></span><br><span class="line"><span class="comment">//        String content;</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            content = JWT.decode(token).getAudience().get(0);</span></span><br><span class="line"><span class="comment">//        &#125; catch (JWTDecodeException j) &#123;</span></span><br><span class="line"><span class="comment">//            res.put(&quot;state&quot;,&quot;invalid&quot;);</span></span><br><span class="line"><span class="comment">//            res.put(&quot;token&quot;,null);</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException(&quot;401 (jwt decode error)&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        String secret = secretKey + content.split(&quot;;;&quot;)[0];</span></span><br><span class="line"><span class="comment">//        // 验证 token     如果验证失败应该返回FALSE???</span></span><br><span class="line"><span class="comment">//        JWTVerifier jwtVerifier = JWT.require(Algorithm.HMAC256(secret)).build();</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            jwtVerifier.verify(token);</span></span><br><span class="line"><span class="comment">//        &#125; catch (JWTVerificationException e) &#123;</span></span><br><span class="line"><span class="comment">//            res.put(&quot;state&quot;,&quot;invalid&quot;);</span></span><br><span class="line"><span class="comment">//            res.put(&quot;token&quot;,null);</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException(&quot;401 (jwt verify error)&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        // 验证成功</span></span><br><span class="line"><span class="comment">//        // 查看 token 的 有效期</span></span><br><span class="line"><span class="comment">//        long expireTime = Long.parseLong(content.split(&quot;;;&quot;)[1]);</span></span><br><span class="line"><span class="comment">//        long currentTime = System.currentTimeMillis();</span></span><br><span class="line"><span class="comment">//        //      已过期</span></span><br><span class="line"><span class="comment">//        if (currentTime &gt; expireTime)&#123;</span></span><br><span class="line"><span class="comment">//            res.put(&quot;state&quot;,&quot;expire&quot;);</span></span><br><span class="line"><span class="comment">//            res.put(&quot;token&quot;,null);</span></span><br><span class="line"><span class="comment">//        &#125;else &#123;</span></span><br><span class="line"><span class="comment">//        //      快过期</span></span><br><span class="line"><span class="comment">//            if (expireTime - currentTime &lt; 5*60*1000)&#123;</span></span><br><span class="line"><span class="comment">//                res.put(&quot;state&quot;,&quot;invalid&quot;);</span></span><br><span class="line"><span class="comment">//                long newExpireTime = System.currentTimeMillis() + tokenExpireTime*60*1000L;</span></span><br><span class="line"><span class="comment">//                String newToken= JWT.create().withAudience(content.split(&quot;;;&quot;)[0] +&quot;;;&quot;+ newExpireTime)</span></span><br><span class="line"><span class="comment">//                        .sign(Algorithm.HMAC256(secret));</span></span><br><span class="line"><span class="comment">//                res.put(&quot;token&quot;,newToken);</span></span><br><span class="line"><span class="comment">//            &#125;else &#123;</span></span><br><span class="line"><span class="comment">//        //      正常有效</span></span><br><span class="line"><span class="comment">//                res.put(&quot;state&quot;,&quot;valid&quot;);</span></span><br><span class="line"><span class="comment">//                res.put(&quot;token&quot;,token);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        //      有效</span></span><br><span class="line"><span class="comment">//        return res;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br></pre></td></tr></table></figure><br>进行测试<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**     test checkToken() **/</span></span><br><span class="line"><span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span> checkToken(token);</span><br><span class="line">System.out.println(<span class="string">&quot;|--有效: \t\t\t&quot;</span>+res);</span><br><span class="line">System.out.println(<span class="string">&quot;|------&quot;</span>);</span><br><span class="line">TimeUnit.MINUTES.sleep(<span class="number">2</span>);<span class="comment">//分</span></span><br><span class="line">res = checkToken(token);</span><br><span class="line">System.out.println(<span class="string">&quot;|--快过期: \t\t\t&quot;</span>+res);</span><br><span class="line">System.out.println(<span class="string">&quot;|------&quot;</span>);</span><br><span class="line">TimeUnit.MINUTES.sleep(<span class="number">2</span>);<span class="comment">//分</span></span><br><span class="line">res = checkToken(token);</span><br><span class="line">System.out.println(<span class="string">&quot;|--过期: \t\t\t&quot;</span>+res);</span><br><span class="line">System.out.println(<span class="string">&quot;|------&quot;</span>);</span><br></pre></td></tr></table></figure><br>测试结果<br><img src="https://img-blog.csdnimg.cn/20210422004447707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x3dDE1OTc1MzI0ODY=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="2-编写过滤器"><a href="#2-编写过滤器" class="headerlink" title="2.编写过滤器"></a>2.编写过滤器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &#123; &quot;/*&quot; &#125;, filterName = &quot;tokenAuthorFilter&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TokenAuthorFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(TokenAuthorFilter.class);</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span></span><br><span class="line">            <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) request;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> req.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        logger.info(<span class="string">&quot;token：&#123;&#125;&quot;</span>, token);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == token || token.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServletException</span>(<span class="string">&quot;用户授权认证没有通过...客户端请求参数中无token信息&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.volidateToken(token)) &#123;</span><br><span class="line">                <span class="comment">//通过校验</span></span><br><span class="line">                logger.info(<span class="string">&quot;token过滤完成&quot;</span>);</span><br><span class="line">                chain.doFilter(request, response);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServletException</span>(<span class="string">&quot;用户授权认证没有通过...客户端请求参数token信息无效&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">volidateToken</span><span class="params">(String token)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> token.equals(TokenUtil.checkToken(token));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>未完待续 …</strong></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目实训 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区块链 block chain</title>
      <link href="/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%AD%A6%E9%99%A22021-6%20%E3%80%8A%E5%8C%BA%E5%9D%97%E9%93%BE%E3%80%8B%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95_%E5%AD%94%E8%80%81%E5%B8%88_fromLWT_%E5%8C%BA%E5%9D%97%E9%93%BE%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95%E9%A2%98%E7%9B%AE%E5%9B%9E%E5%BF%86/"/>
      <url>/2023/10/10/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%AD%A6%E9%99%A22021-6%20%E3%80%8A%E5%8C%BA%E5%9D%97%E9%93%BE%E3%80%8B%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95_%E5%AD%94%E8%80%81%E5%B8%88_fromLWT_%E5%8C%BA%E5%9D%97%E9%93%BE%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95%E9%A2%98%E7%9B%AE%E5%9B%9E%E5%BF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >简单回忆记录2021学年春季学期的限选课==区块链==的==期末考试==题目，记忆可能有偏差，请谅解。相关内容为个人观点，不是正确答案…<br>个人观点：课程内容丰富(有请其他老师来拓展)，孔老师与同学的课上==互动很多==(你懂的)，老师稍微有点严格，并且==不画重点==(TAT)，但是==考试较简单==，仔细学习复习还是可以的</font></p><p><font color=#999AAA >from TAO</font></p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="一、简答题"><a href="#一、简答题" class="headerlink" title="一、简答题"></a>一、简答题</h1><h3 id="1-关于“算力”的材料，让你描述算力对区块链的意义或者联系"><a href="#1-关于“算力”的材料，让你描述算力对区块链的意义或者联系" class="headerlink" title="1.关于“算力”的材料，让你描述算力对区块链的意义或者联系"></a>1.关于“算力”的材料，让你描述算力对区块链的意义或者联系</h3><p><font color=#999AAA >TAO算力支撑区块链安全性、持续性？</font></p><h3 id="2-“世界状态”"><a href="#2-“世界状态”" class="headerlink" title="2.“世界状态”"></a>2.“世界状态”</h3><p><font color=#999AAA > 相关资料：</p><p><font color=#999AAA >以太坊中的世界状态定义为以太坊区块链中的全局状态，表示为以太坊地址和账户状态之间的映射。</p><p><font color=#999AAA >账户状态由4个字段组成:</p><p><font color=#999AAA >1. nonce：当每次从地址发送交易时，该值递增。在合约账户中，该值代表账户创建的合约数量。</p><p><font color=#999AAA >2. balance:账户余额。ether也认为是以太币的单位，另一个常用的单位是wei。</p><p><font color=#999AAA >3. storageroot：代表Merkle Patricia树的根节点,并对账户的存储内容进行编码。（合约账户）</p><p><font color=#999AAA >4. codehash:作为一个不可变字段,包含了与账户关联的智能合约代码的哈希值。在普通账户中,该字段包含一个空字符串的 Keccak 256位哈希值。另外,代码通过一个消息调用而被调用。</p><h3 id="3-“准入准则”"><a href="#3-“准入准则”" class="headerlink" title="3.“准入准则”"></a>3.“准入准则”</h3><p><font color=#999AAA >TAO</p><h3 id="4-“区块”的定义和相关原理"><a href="#4-“区块”的定义和相关原理" class="headerlink" title="4.“区块”的定义和相关原理"></a>4.“区块”的定义和相关原理</h3><p><font color=#999AAA >TAO</p><h3 id="5"><a href="#5" class="headerlink" title="5.???"></a>5.???</h3><p><font color=#999AAA >TAO忘了</p><h1 id="二、证明题"><a href="#二、证明题" class="headerlink" title="二、证明题"></a>二、证明题</h1><h3 id="拜占庭算法"><a href="#拜占庭算法" class="headerlink" title="拜占庭算法"></a>拜占庭算法</h3><h5 id="（1）前言"><a href="#（1）前言" class="headerlink" title="（1）前言"></a>（1）前言</h5><p><font color=#999AAA >拜占庭问题的最初描述是：n 个将军被分隔在不同的地方，忠诚的将军希望通过某种协议达成某个命令的一致（比如一起进攻或者一起后退）。但其中一些背叛的将军会通过发送错误的消息阻挠忠诚的将军达成命令上的一致。Lamport 证明了在将军总数大于3m ，背叛者为m 或者更少时，忠诚的将军可以达成命令上的一致。为了保证上面的需求，必须满足下面两个条件：</p><p>IC1. 所有忠诚的副官遵守相同的命令<br>IC2. 如果发出命令的将军是忠诚的，那么所有忠诚的副官遵守司令（发出命令的将军）的命令</p><p><font color=#999AAA >消息算法OM(m) 。对于所有的非负整数m ，每个发令者通过OM(M) 算法发送命令给n-1 个副官。（1）发令者将他的命令发送给每个副官。（2）对于每个i ，vi 是每个副官i 从发令者收到的命令，如果没有收到命令则为撤退命令。副官i 在OM(m-1) 中作为发令者将vi 发送给另外n-2 个副官。（3）对于每个i，并且j不等于 i，vj 是副官i 从第（2）步中的副官j 发送过来的命令（使用OM(m-1)算法），如果没有收到第（2）步中的副官j 的命令则默认为撤退命令。最后副官i 使用majority(v1,…,vn-1)得到命令。</p><p><font color=#999AAA >定义majority(com1,com2,…,comn)等于多数派命令。</p><h5 id="（2）题干：对于任意m，如果有超过3m-个将军和最多m-个背叛者，算法OM-m-满足条件IC1-和条件IC2。"><a href="#（2）题干：对于任意m，如果有超过3m-个将军和最多m-个背叛者，算法OM-m-满足条件IC1-和条件IC2。" class="headerlink" title="（2）题干：对于任意m，如果有超过3m 个将军和最多m 个背叛者，算法OM(m) 满足条件IC1 和条件IC2。"></a>（2）题干：对于任意m，如果有超过3m 个将军和最多m 个背叛者，算法OM(m) 满足条件IC1 和条件IC2。</h5><p><font color=#999AAA >证明引理<br>引理1：对于任意m 和k ，如果有超过2k+m 个将军和最多k 个背叛者，那么算法OM(m) 满足IC2 （回顾下IC2 指的是，如果将军是忠诚的，所有的副官遵守将军命令）。<br>证明：当m=0 的时候，OM(0) 在将军是忠诚的时候满足IC2。<br>当m&gt;0 时，首先将军将命令传递给 n-1 个副官，然后每个副官对n-1 个将军执行OM(m-1) 算法。<br>因为假设了n&gt;2k+m（引理中有将军数大于2k+m），所以 n-1 &gt; 2k+(m-1) &gt;= 2k（即每一轮中副官总数不小于背叛者的两倍）<br>这样每轮OM(m-1) 算法中忠诚的副官收到的命令都是majority(v1,v2,…,v(n-1))，其中忠诚副官发送的命令大于或者等于一半。</p><p><font color=#999AAA >证明定理<br>定理1：对于任意m，如果有超过3m 个将军和最多m 个背叛者，算法OM(m) 满足条件IC1 和条件IC2。<br>证明：通过m 的归纳法证明，我们通过假设OM(m-1) 成立来证明OM(m) m&gt;0。<br>首先考虑发送命令的将军是忠诚的。<br>那么将引理中k 设为m 则OM(m) 满足IC2 ，IC1 在发令将军是忠诚的情况下也满足。<br>接着考虑m 个背叛者中有一个是发令者，那最多就只有m-1 个副官是背叛者了，又因为有3m 个将军，所以副官的总数超过3m-1，且有3m-1&gt;3(m-1) 。<br>因此通过归纳法假设 OM(m-1) 满足IC1 和IC2（最多3(m-1) 个将军和最多m-1 个背叛者）。<br>那么任意两个忠诚的副官j 在OM(m-1) 获得相同命令vj，那么在OM(m) 算法中每个忠诚的副官都会收到(v1,v2,…,\v(n-1))，可知满足条件IC1 和IC2。</p><h1 id="三、应用题"><a href="#三、应用题" class="headerlink" title="三、应用题"></a>三、应用题</h1><h3 id="1-员工因为怀疑工作量被修改而争执不下，请用区块链完成工作量系统，写出原理和主要操作。"><a href="#1-员工因为怀疑工作量被修改而争执不下，请用区块链完成工作量系统，写出原理和主要操作。" class="headerlink" title="1.员工因为怀疑工作量被修改而争执不下，请用区块链完成工作量系统，写出原理和主要操作。"></a>1.员工因为怀疑工作量被修改而争执不下，请用区块链完成工作量系统，写出原理和主要操作。</h3><h3 id="2-请用智能合约处理租房问题。当业主收到租户的租金自动给租户房屋的安全密钥。"><a href="#2-请用智能合约处理租房问题。当业主收到租户的租金自动给租户房屋的安全密钥。" class="headerlink" title="2.请用智能合约处理租房问题。当业主收到租户的租金自动给租户房屋的安全密钥。"></a>2.请用智能合约处理租房问题。当业主收到租户的租金自动给租户房屋的安全密钥。</h3><h1 id="四、选择题-很简单"><a href="#四、选择题-很简单" class="headerlink" title="四、选择题(很简单)"></a>四、选择题(很简单)</h1><h3 id="1-比特币创始人英文名"><a href="#1-比特币创始人英文名" class="headerlink" title="1. 比特币创始人英文名"></a>1. 比特币创始人英文名</h3><p><font color=#999AAA >英文名！！！</p><p><font color=#999AAA > Satoshi Nakamoto （中本聪）</p><h3 id="2-区块链是否可以无中介连接两个节点"><a href="#2-区块链是否可以无中介连接两个节点" class="headerlink" title="2.区块链是否可以无中介连接两个节点"></a>2.区块链是否可以无中介连接两个节点</h3><p><font color=#999AAA >记不太清了</p><h3 id="3-如果有节点恶意篡改数据会发生什么？"><a href="#3-如果有节点恶意篡改数据会发生什么？" class="headerlink" title="3.如果有节点恶意篡改数据会发生什么？"></a>3.如果有节点恶意篡改数据会发生什么？</h3><p>A.hash值改变<br>B.hash值不匹配<br>C.本地检测失败(？)<br>D.以上都是</p><h3 id="4-以太坊生成区块的奖励给谁？"><a href="#4-以太坊生成区块的奖励给谁？" class="headerlink" title="4.以太坊生成区块的奖励给谁？"></a>4.以太坊生成区块的奖励给谁？</h3><h3 id="5-？"><a href="#5-？" class="headerlink" title="5.(？)"></a>5.(？)</h3><h1 id="四、资源"><a href="#四、资源" class="headerlink" title="四、资源"></a>四、资源</h1><p><a href="https://download.csdn.net/download/lwt1597532486/19842700">TAO复习整理的思维导图和手写的知识点</a><br><a href="https://download.csdn.net/download/lwt1597532486/19842700">https://download.csdn.net/download/lwt1597532486/19842700</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TAO 1001 test</title>
      <link href="/2023/10/01/TAO-1001-test/"/>
      <url>/2023/10/01/TAO-1001-test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/27/hello-world/"/>
      <url>/2023/09/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
